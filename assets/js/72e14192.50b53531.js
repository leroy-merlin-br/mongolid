"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[239],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4181:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1},i="Quick Start",l={unversionedId:"quick-start",id:"quick-start",title:"Quick Start",description:"- PHP 7.1",source:"@site/docs/quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/docs/3.2.0/quick-start",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",next:{title:"Mongolid Cursor",permalink:"/docs/3.2.0/cursor"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Setup",id:"setup",level:2},{value:"Basic usage",id:"basic-usage",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quick-start"},"Quick Start"),(0,r.kt)("admonition",{title:"Requirements",type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"PHP ",(0,r.kt)("strong",{parentName:"li"},"7.1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://php.net/manual/en/set.mongodb.php"},"MongoDB Driver")))),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"You can install library through Composer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="command"',title:'"command"'},"composer require leroy-merlin-br/mongolid\n")),(0,r.kt)("h2",{id:"setup"},"Setup"),(0,r.kt)("p",null,"If you are not using Laravel, you should initialize the Mongolid connection and container manually.\nThe minimalistic way of doing it is to use ",(0,r.kt)("inlineCode",{parentName:"p"},"Mongolid\\Connection\\Manager"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="config"',title:'"config"'},"require 'vendor/autoload.php';\n\nuse Mongolid\\Connection\\Manager;\nuse Mongolid\\Connection\\Connection;\n\n$manager = new Manager();\n$manager->setConnection(new Connection('mongodb://localhost:27017'));\n")),(0,r.kt)("p",null,"Now you are ready to create your own models \ud83d\ude04"),(0,r.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Post.php"',title:'"Post.php"'},"class Post extends \\Mongolid\\Model\\AbstractModel\n{\n}\n")),(0,r.kt)("p",null,"Note that we did not tell Mongolid which collection to use for our ",(0,r.kt)("inlineCode",{parentName:"p"},"Post")," model. So, in this case, Mongolid ",(0,r.kt)("strong",{parentName:"p"},"will not save the model into the database"),".\nThis can be used for models that represents objects that will be embedded within another object and will not have their own collection."),(0,r.kt)("p",null,"You may specify a collection by defining a ",(0,r.kt)("inlineCode",{parentName:"p"},"collection")," property on your model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Post.php"',title:'"Post.php"'},"class Post extends \\Mongolid\\Model\\AbstractModel {\n\n    protected $collection = 'posts';\n\n}\n")),(0,r.kt)("p",null,"Mongolid will also assume each collection has a primary key attribute named ",(0,r.kt)("inlineCode",{parentName:"p"},"_id"),", since MongoDB requires an ",(0,r.kt)("inlineCode",{parentName:"p"},"_id")," for every single document.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"_id")," attribute can be of any type. The default type for this attribute is ",(0,r.kt)("inlineCode",{parentName:"p"},"ObjectId"),".\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.mongodb.org/manual/reference/method/ObjectId/"},"Learn more about the MongoId"),"."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},'Mongolid will automatically convert strings in ObjectId format (For example: "4af9f23d8ead0e1d32000000")\nto ',(0,r.kt)("inlineCode",{parentName:"p"},"ObjectId")," when querying or saving an object.")),(0,r.kt)("p",null,"Once a model is defined, you are ready to start retrieving and creating documents in your collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Retrieving all models"',title:'"Retrieving',all:!0,'models"':!0},"    $posts = Post::all();\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Retrieving a document by primary key"',title:'"Retrieving',a:!0,document:!0,by:!0,primary:!0,'key"':!0},"    $post = Post::first('4af9f23d8ead0e1d32000000');\n\n    // or\n    \n    $post = Post::first(new MongoDB\\BSON\\ObjectID('4af9f23d8ead0e1d32000000'));\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Retrieving a document by attribute"',title:'"Retrieving',a:!0,document:!0,by:!0,'attribute"':!0},"    $post = Post::first(['title' => 'How Mongolid saved the day']);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Retrieving many documents by attribute"',title:'"Retrieving',many:!0,documents:!0,by:!0,'attribute"':!0},"    $posts = Post::where(['category' => 'coding']); // where() method returns a MongolidCursor\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Querying using mongolid models"',title:'"Querying',using:!0,mongolid:!0,'models"':!0},"    $posts = Post::where(['votes' => ['$gt' => 100]])->limit(10); // Mongolid\\Cursor\\Cursor\n\n    foreach ($posts as $post) {\n        var_dump($post->title);\n    }\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="Mongolid count"',title:'"Mongolid','count"':!0},"    $count = Post::where(['votes' => ['$gt' => 100]])->count(); // int\n")),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Pretty easy right?"))))}u.isMDXComponent=!0}}]);